<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="interactionMapper">
	
	
	<resultMap id="followList" type="com.project.model.FollowListVO">
		<result property="followNo" column="follow_no"/>
		<result property="followeeId" column="followee_id"/>
		<result property="followerId" column="follower_id"/>
		<result property="followDate" column="follow_date"/>
		<result property="followeePenName" column="followee_pen_name"/>
	</resultMap>
	
	<!-- 
	<select id="selectMember" parameterType="String" resultType="ucamp.dao.MemberVO">
		select member_id as memberId, pw, name from member_data where
		member_id= #{id}
	</select>
	<select id="selectMemberWithoutPw" parameterType="String" resultType="ucamp.dao.MemberVO">
		select member_id as memberId, name from member_data where
		member_id= #{id}
	</select>

	<select id="selectMemberList" resultType="ucamp.dao.MemberVO">
		select member_id as memberId, name from member_data
	</select>
	-->
	<!--  
	<select id="selectFollowList" resultType="com.project.model.FollowListVO">
		  SELECT 
		  fl.follow_no AS follow_no
		  , to_char(fl.follow_date, 'yyyy.mm.dd') AS follow_date
		  , fl.followee_id AS followee_id
		  , fl.follower_id AS follower_id
		  , a.pen_name AS followee_pen_name
	      FROM follow_list fl, app_user a
	      WHERE fl.followee_id = a.user_id
	</select>
	 -->
	 
	 
	 <select id="selectFollowList" resultMap="followList">	
	 	SELECT 
			  fl.follow_no AS follow_no
			  , to_char(fl.follow_date, 'yyyy.mm.dd') AS follow_date
			  , fl.followee_id AS followee_id
			  , fl.follower_id AS follower_id
			  , a.pen_name AS followee_pen_name
	    FROM follow_list fl, app_user a
	    WHERE fl.followee_id = a.user_id
	 </select>
	 
	 <select id="selectFollowListOrderByDate" resultMap="followList">
	 	 SELECT fl.follow_no AS follow_no
	 	 		, to_char(fl.follow_date, 'yyyy.mm.dd') AS follow_date
	 	 		, fl.followee_id AS followee_id
	 	 		, fl.follower_id AS follower_id
	 	 		, a.pen_name AS followee_pen_name
         FROM follow_list fl, app_user a
         WHERE fl.followee_id = a.user_id
         AND fl.follower_id = 'test2'
    	 ORDER BY fl.follow_date
	 </select>
	 
	 <select id="selectFollowListOrderByPenName" resultMap="followList">
	 	 SELECT fl.follow_no AS follow_no
	 	 		, to_char(fl.follow_date, 'yyyy.mm.dd') AS follow_date
	 	 		, fl.followee_id AS followee_id
	 	 		, fl.follower_id AS follower_id
	 	 		, a.pen_name AS followee_pen_name
         FROM follow_list fl, app_user a
         WHERE fl.followee_id = a.user_id
         AND fl.follower_id = 'test2'
    	 ORDER BY a.pen_name
	 </select>
	 
	 <select id="isReacted" resultType="int">
	 	SELECT COUNT(user_id) FROM reaction WHERE user_id = #{userId} AND write_no = #{writeNo}
	 </select>
	 
	 <select id="selectReactionsCnt" resultType="int">
	 	SELECT count(*) FROM reaction WHERE write_no = #{writeNo} 
	 </select>
	 
	 <select id="selectIsBookmarked" resultType="int">
	 	SELECT count(user_id) FROM bookmark WHERE user_id=#{userId} AND write_no=#{writeNo}
	 </select>
	 
	<!-- 
	AND fl.follower_id = 'test2'
	<insert id="addMember" parameterType="ucamp.dao.MemberVO">
		insert into member_data(member_id, pw, name) values (#{memberId}, #{pw}, #{name})
		INSERT INTO follow_list(follow_no, followee_id, follower_id, follow_date) VALUES(#{followNo}, #{follweeId}, #{follower_id}, sysdate);
	</insert>
	 -->
	 
	<insert id="addFollow" parameterType="com.project.model.FollowListVO">
		INSERT INTO follow_list(follow_no, followee_id, follower_id, follow_date) 
		VALUES(FOLLOW_NO_SEQ.nextval, #{followeeId}, #{followerId}, sysdate)
	</insert>
	
	<insert id="addReaction" >
		INSERT INTO reaction(user_id, write_no, reaction_date) VALUES(#{userId}, #{writeNo}, sysdate)
	</insert>
	
	<!-- 
	<update id="updateMember" parameterType="ucamp.dao.MemberVO">
		update member_data set pw=#{pw} where member_id=#{memberId}
	</update>
	
	<delete id="removeMember" parameterType="String">
		delete from member_data where member_id=#{memberId}
	</delete>
	 -->
	 
	 <delete id="deleteReaction">
	 	DELETE FROM reaction WHERE user_id = #{userId} AND write_no = #{writeNo}
	 </delete>
	 
	 
</mapper>
